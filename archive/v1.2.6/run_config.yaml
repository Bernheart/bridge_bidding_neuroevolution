# =============================================================================
# General experiment settings
# =============================================================================
name: "evo_bridge_bidding"
version: 1.2.6
description: |
  fixed a big bug with hand index
#seed: 1234
#use_gpu: false                # evolution typically CPU-bound, set true if fitness eval is heavy
results_dir: "./archive/v{version}/"

# =============================================================================
# Evolutionary algorithm parameters
# =============================================================================
evolution:
  population_size: 600       # number of NN agents per generation
  generations: 1000          # total number of generations to run
  selection:
    method: "tournament"     # options: tournament, roulette, rank
    tournament_size: 3
  crossover:
#    enabled: true
    probability: 0.7         # chance two parents will crossover
    type: "uniform"          # options: single_point, two_point, uniform
  mutation:
#    enabled: true
    probability: 0.3         # chance child will mutate
    rate: 0.2                # per-gene mutation rate
    perturbation_scale: 0.2  # std dev of gaussian noise added to weights
  elitism:
    keep_best: 0.07          # percentage of top agents carried to next gen
  phases:
    early:
      population_size: 300    # population ramps from this to original
      generations: [1, 200]
      mutation_rate: 0.7     # mutation rate decays from this to original
      diversity_weight: 1    # only for this phase
    middle:
      generations: [200, 800]
      island_migration:
        number: 4
        every: 20
        top: 0.05
      # RL fine tuning
    late:
      generations: [800, 1000]
      mutation_rate: 0.1    # only for this phase
      # MAP-Elites fill in
      diversity_weight: 0.1 # only for this phase


# =============================================================================
# Neural network architecture & encoding
# =============================================================================
neural_network:
  input_size: 42             # (one‐hot for cards in hand )->points + colors lengths + bidding history encoding
  hidden_layers: [128, 64]   # two hidden layers with 128, 64 neurons
  output_size: 37            # number of possible bids (including pass)
  activation: "tanh"         # hidden layers activation
  output_activation: "softmax"
#  weight_init: "xavier"      # weight initialization scheme

# =============================================================================
# Bridge simulation / fitness evaluation
# =============================================================================
simulation:
#  deals_per_agent: 64        # how many hands each agent plays per evaluation
  opponents: "all"           # can be random, heuristic, or fixed-bot
  scoring:                   # how fitness is computed
    imp_to_power: 1
    imp_difference: 1.0
    good_suit_reward: 0.2
    bidding_length_bonus: 0.4
    better_than_pass_bonus: 0.8
    diversity_bonus: 0       # changed to diversity weight

# =============================================================================
# Parallelization & performance
# =============================================================================
#parallel:
#  enabled: true
#  num_workers: 8            # number of CPU processes for fitness eval

# =============================================================================
# Logging & checkpoints
# =============================================================================
logging:
  log_interval: 10           # log summary every n generations
  eval_interval: 1           # run detailed evaluation/play-off every n generations
  save_interval: 50          # checkpoint population/network weights every n generations

# =============================================================================
# Data & Batches
# =============================================================================
data:
  batch:
    size: 64
    first: 1
    last: -1                  # -1 == first + generations -1
    per_generation: 2
  files:
    population: "population.pkl"
    statistics: "evolution_stats.csv"
    changelog: "CHANGELOG.md"
    log: "log.csv"
    island: "islands/island_stats{island}.csv"
#    configuration: "run_config.yaml"


# =============================================================================
# Advanced / optional
# =============================================================================
advanced:
  overwrite_version: true    # be very careful with this one
  use_behavioral_diversity: true
  diversity_weight: 0.5       # weight given to novelty in fitness
  archive_size: 100           # for MAP-Elites or novelty archives
